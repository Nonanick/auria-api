import { IRouteRequest } from '../../request/IRouteRequest';
import { IProxiedRoute } from '../../proxy/IProxiedRoute';
import { SendResponseFunction } from '../SendResponseFunction';
import { SendErrorFunction } from '../SendErrorFunction';
import { MaybePromise } from '../../error/Maybe';
import { IApiRouteResponse } from '../../response/IRouteResponse';

/**
 * ApiRequestHandler
 * ----------------
 *
 * Defines the function signature that is responsible for:
 * 1. Apply request proxies to the request generated by the adapter
 * 2. Call ApiRouteResolver by passing the modified Request object
 * 3. Create a Response object based on the return of the ApiRouteResolver function
 * 4. Apply all Response proxies, modifying it before sending it back to the adapter
 * 5. Send the modified response object to the adapter
 *
 * At any point, any raised ApiError or ApiException will be sent to the adapter
 * trough the 'sendError' function
 */
export type RequestHandler = (
  route: IProxiedRoute,
  request: IRouteRequest,
  sendResponse: SendResponseFunction,
  sendError: SendErrorFunction
) => MaybePromise<IApiRouteResponse>;