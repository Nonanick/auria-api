import { IAdapter } from '../adapter/adapter.type';
import { Container } from '../container/container.class';
import { IProxiedRoute } from '../proxy/proxied_route.type';
import { IRouteRequest } from '../request/route_request.type';
import { SendErrorFunction } from './send_error.type';
import { SendResponseFunction } from './send_response.type';
import { RequestHandler } from './composition/request_handler.type';

export interface IMaestro extends Container {

	/**
	 * Api Call Resolver
	 * ------------------
	 * 
	 * Handles how the controller method will be called
	 * 
	 * Call resolver has access to:
	 * 1. ApiRoute - The route properties, with all of its proxies
	 * 2. ApiRequest - The request (generated by an adapter)
	 * 3. SendResponse - A function given by the adapter to send a response 
	 * to the caller
	 * 4. SendError - A function, given by the adapter, to send a error response
	 * to the caller 
	 * 
	 * @param resolver 
	 */
	setRequestHandler(resolver: RequestHandler): void;


	/**
	 * Handle
	 * ------
	 * 
	 * Function exposed to all adapters that receives 
	 */
	handle(
		route: IProxiedRoute,
		request: IRouteRequest,
		sendResponse: SendResponseFunction,
		sendError: SendErrorFunction,
	): void;

	addAdapter(adapter: IAdapter): void;

	start(): void;

}